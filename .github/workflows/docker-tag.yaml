name: Docker build and push on tag
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: cosign-installer
        uses: sigstore/cosign-installer@v2.0.0
      - name: Install qemu-tools
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-utils
      - name: Export tag
        id: export_tag
        run: |
          echo "Using tag $(git describe --tags `git rev-list --tags --max-count=1`  2>/dev/null || echo 'v0.0.1')"
          TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.1")
          echo "::set-output name=elemental_tag::$TAG"
      - name: Docker meta for tag
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            quay.io/costoolkit/elemental-cli
          tags: |
            type=semver,pattern=v{{version}}
            type=raw,value=latest
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          load: true # loads it locally, so it can be used from docker client
          # cache into GitHub actions cache, nice
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: elemental
          build-args: |
            ELEMENTAL_VERSION=${{ steps.export_tag.outputs.elemental_tag }}
            ELEMENTAL_COMMIT=${{ github.sha }}
      - name: Test elemental image version
        run: docker run ${{ steps.docker_build.outputs.ImageID }} version --long
      - name: Test elemental image install with --force-efi
        run: |
          # create a 30Gb file
          qemu-img create -f raw disk-efi.img 30G
          # mount loop device and get the device
          LOOP=`sudo losetup -fP --show disk-efi.img`
          docker run -v /dev/:/dev/ --privileged ${{ steps.docker_build.outputs.ImageID }} install --force-efi --debug -d quay.io/costoolkit/releases-green:cos-system-0.8.6 $LOOP
          sudo losetup -D $LOOP
          rm disk-efi.img
      - name: Test elemental image install
        run: |
          # create a 30Gb file
          qemu-img create -f raw disk.img 30G
          # mount loop device and get the device
          LOOP=`sudo losetup -fP --show disk.img`
          docker run -v /dev/:/dev/ --privileged ${{ steps.docker_build.outputs.ImageID }} install --debug -d quay.io/costoolkit/releases-green:cos-system-0.8.6 $LOOP
          sudo losetup -D $LOOP
          rm disk.img
      - name: Push image  # should be a free build as everything has been cached and loaded
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # cache into GitHub actions cache, nice
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: elemental
          build-args: |
            ELEMENTAL_VERSION=${{ steps.export_tag.outputs.elemental_tag }}
            ELEMENTAL_COMMIT=${{ github.sha }}
      - name: Sign image
        env:
          COSIGN_EXPERIMENTAL: 1
        run:
          for value in ${{ steps.meta.outputs.tags }};do
            cosign sign $value
          done
