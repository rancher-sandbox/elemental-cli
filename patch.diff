diff --git a/pkg/types/v1/luet_test.go b/pkg/types/v1/luet_test.go
index 6f3a56e..9e71b3b 100644
--- a/pkg/types/v1/luet_test.go
+++ b/pkg/types/v1/luet_test.go
@@ -17,13 +17,15 @@ limitations under the License.
 package v1_test
 
 import (
+	"context"
 	dockTypes "github.com/docker/docker/api/types"
-	context2 "github.com/mudler/luet/pkg/api/core/context"
 	dockClient "github.com/docker/docker/client"
-        context "context"
+	context2 "github.com/mudler/luet/pkg/api/core/context"
 	. "github.com/onsi/ginkgo/v2"
 	. "github.com/onsi/gomega"
 	"github.com/rancher-sandbox/elemental/pkg/types/v1"
+	"io"
+	"io/ioutil"
 	"os"
 )
 
@@ -46,7 +48,7 @@ var _ = Describe("Types", Label("luet", "types"), func() {
 			image := "quay.io/costoolkit/releases-green:cloud-config-system-0.11-1"
 			Expect(luet.Unpack(target, image, false)).NotTo(BeNil())
 		})
-               	It("Unpack local images", Label("unpack", "root"), func() {
+		It("Unpack local images", Label("unpack", "root"), func() {
 			image := "docker.io/library/alpine"
 			ctx := context.Background()
 			cli, err := dockClient.NewClientWithOpts(dockClient.FromEnv, dockClient.WithAPIVersionNegotiation())
@@ -54,8 +56,9 @@ var _ = Describe("Types", Label("luet", "types"), func() {
 			// Pull image
 			reader, err := cli.ImagePull(ctx, image, dockTypes.ImagePullOptions{})
 			defer reader.Close()
+			_, _ = io.Copy(ioutil.Discard, reader)
 			// Check that luet can unpack the local image
 			Expect(luet.Unpack(target, image, true)).To(BeNil())
 		})
- 	})
+	})
 })
